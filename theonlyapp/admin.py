from django.contrib import admin, messages
from django.utils.safestring import mark_safe
from .models import MyModel, Category, Cart, MyUser
from django.db.models import QuerySet

admin.site.register(MyUser)


@admin.register(Category)
class CategoryAdmin(admin.ModelAdmin):
    list_display = ['title']


class MyModelAdmin(admin.ModelAdmin):
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    list_display = ['title', 'price', 'category', 'get_html_photo']

    # –†–µ–¥–æ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä—è–º–æ –≤ –ø–∞–Ω–µ–ª–µ
    list_editable = ['price', 'category']

    # –ö–∞–π—Å—ã–ª–∞—Ä–¥—ã –±–∞—Å–∫–∞–Ω–¥–∞ –∫–∏—Ä–∏—à –∫–µ—Ä–µ–∫ –æ—à–æ–ª –æ–±—ä–µ–∫—Ç–∫–µ
    list_display_links = ['title', ]

    # –ë–∏—Ä —Å—Ç—Ä–∞–Ω–∏—Ü–∞–¥–∞ –∫–∞–Ω—á–∞ –∑–∞–ø–∏—Å—å –±–æ–ª—É—à –∫–µ—Ä–µ–∫
    list_per_page = 3

    # fields -> –ö–∞–π—Å—ã –ø–æ–ª—è–ª–∞—Ä–¥—ã —Ç–æ–ª—Ç—É—Ä–≥–∞–Ω–≥–∞ –±–æ–ª–æ—Ç. –ñ–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–∫–µ–Ω–¥–µ –∫–∞–π—Å—ã–ª–∞—Ä –∫–æ—Ä—É–Ω—Å—É–Ω
    # fields = []

    # readonly_fields -> –ö–∞–π—Å—ã–ª–∞—Ä–¥—ã –∏–∑–º–µ–Ω–∏—Ç—å —ç—Ç—Å–µ –±–æ–ª–±–æ–π—Ç!
    readonly_fields = []

    # –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ —Ä–µ–¥–æ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–∫–µ–Ω–¥–µ –∫–æ—Ä—É–Ω–±–æ–≥–æ–Ω–¥–æ—Ä
    exclude = ['pub_date', 'update_date']

    # –§–∏–ª—å—Ç—Ä –¥–ª—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    list_filter = ['category', ]

    # –ü–æ–∏—Å–∫
    search_fields = ['title', 'description']

    # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ –∏ –ì–æ—Ä–∏–∑–∞–Ω—Ç–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ ManyToManyField
    filter_vertical = ['cart']

    # filter_horizontal = ['cart']

    # save_on_top = True  # for show button 'save' in top

    # save_as = True  # –ï—Å–ª–∏ –±–∞—Ä –º–æ–¥–µ–ª—å–∫–∞ –±–æ–ª—Å–æ —Å–æ—Ö. —ç—Ç–∫–µ–Ω–¥–µ –Ω–æ–≤—ã–π –±–æ–ª–æ—Ç

    # actions_on_bottom = True  # –ü–æ–Ω—è—Ç–Ω–æ —ç–ª–µ –≥–æ –¥–µ–π–º –∞—Ç—ã–Ω–∞–Ω —ç–ª–µ üôÉ
    # actions_on_top = False

    # date_hierarchy -> –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª–¥–µ –¥–∞—Ç–∞ –º–µ–Ω–µ–Ω —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫—ã–ª–≥–∞–Ω—ã
    date_hierarchy = 'pub_date'

    actions_selection_counter = False

    def get_html_photo(self, object):
        '''
        –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ñ–æ—Ç–æ –≤–º–µ—Å—Ç–æ —Å—Å—ã–ª–∫–∏
        '''
        if object.image:
            '''
            mark_safe -> didn't ignore html code
            '''
            return mark_safe(f"<img src='{object.image.url}' style='width:50px;height:50px;'")

    get_html_photo.short_description = '–§–æ—Ç–æ –º–æ–¥–µ–ª–∫–∏'

    # actions -> –ö–∞–π—Å—ã –¥–µ—Å—Ç–≤–∏—è–ª–∞—Ä –±–æ–ª—É—à –∫–µ—Ä–µ–∫
    actions = [
        'set_clone_model',
        'set_status_old',
    ]

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–µ—Å—Ç–≤–∏–∏
    @admin.action(description='–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –Ω–æ–≤—ã–π –º–æ–¥–µ–ª—å')
    def set_clone_model(self, request, qs: QuerySet):
        for object in qs:
            object.id = None
            object.save()

    @admin.action(description='SET STATUS OLD')
    def set_status_old(self, request, qs: QuerySet):
        for object in qs:
            object.status = 'OLD'
            object.save()

    """
    @admin.action(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é Sport')
    def set_category_sport(self, request, qs: QuerySet):
        count_updates = qs.update(category=3)
        # self.message_user -> –§—É–Ω–∫—Ü–∏—è –±–æ–ª–≥–æ–Ω–¥–æ –∫–∞–Ω–¥–∞–π —Å–æ–æ–±—â–µ–Ω–∏–µ —á—ã–≥–∞—Ä—ã–Ω–∞ –∂–æ–æ–ø –±–µ—Ä–µ—Ç.
        self.message_user(request,
                          f'–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ {count_updates} –∑–∞–ø–∏—Å–µ–π',
                          # level -> INFO –ó–∞–ø–∏—Å—å—Ç–∏ –∂–∞—à—ã–ª –∫—ã–ª–∞—Ç, ERROR –∫—ã–∑—ã–ª
                          level=messages.INFO
                          )

    @admin.action(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é Man')
    def set_category_man(self, request, qs: QuerySet):
        qs.update(category=1)

    @admin.action(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é Woman')
    def set_category_woman(self, request, qs: QuerySet):
        qs.update(category=2)

    @admin.action(description='–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é Electric')
    def set_category_electric(self, request, qs: QuerySet):
        qs.update(category=4)

    
    """


admin.site.register(MyModel, MyModelAdmin)
admin.site.register(Cart)
